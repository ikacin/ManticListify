{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lazy = void 0;\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\nvar Lazy = /** @class */function () {\n  function Lazy(factory, exists) {\n    if (exists === void 0) {\n      exists = Lazy.defaultExists;\n    }\n    this.factory = factory;\n    this.exists = exists;\n  }\n  Object.defineProperty(Lazy.prototype, \"current\", {\n    /**\r\n     * The current value of the lazy object. Will be initialized, if the 'exists'\r\n     * predicate doesn't match.\r\n     */\n    get: function () {\n      if (!this.exists(this.value)) {\n        this.value = this.factory();\n      }\n      return this.value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Lazy.defaultExists = function (value) {\n    return typeof value !== \"undefined\";\n  };\n  return Lazy;\n}();\nexports.Lazy = Lazy;","map":{"version":3,"names":["Object","defineProperty","exports","value","Lazy","factory","exists","defaultExists","prototype","get","enumerable","configurable"],"sources":["C:/works/react-test/node_modules/party-js/lib/util/lazy.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC;AACrB;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAG,aAAe,YAAY;EAClC,SAASA,IAAIA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAC3B,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;MAAEA,MAAM,GAAGF,IAAI,CAACG,aAAa;IAAE;IACtD,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAN,MAAM,CAACC,cAAc,CAACG,IAAI,CAACI,SAAS,EAAE,SAAS,EAAE;IAC7C;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAI,CAAC,IAAI,CAACH,MAAM,CAAC,IAAI,CAACH,KAAK,CAAC,EAAE;QAC1B,IAAI,CAACA,KAAK,GAAG,IAAI,CAACE,OAAO,CAAC,CAAC;MAC/B;MACA,OAAO,IAAI,CAACF,KAAK;IACrB,CAAC;IACDO,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFP,IAAI,CAACG,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAClC,OAAO,OAAOA,KAAK,KAAK,WAAW;EACvC,CAAC;EACD,OAAOC,IAAI;AACf,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}