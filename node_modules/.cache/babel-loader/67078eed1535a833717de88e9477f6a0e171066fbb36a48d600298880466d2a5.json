{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\nexports.deg2rad = Math.PI / 180;\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\nexports.rad2deg = 180 / Math.PI;\n/**\r\n * A small value to approximately compare values.\r\n */\nexports.epsilon = 0.000001;\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\nfunction lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n}\nexports.lerp = lerp;\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\nfunction slerp(a, b, t) {\n  return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\n}\nexports.slerp = slerp;\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\nfunction invlerp(a, b, v) {\n  return (v - a) / (b - a);\n}\nexports.invlerp = invlerp;\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\nfunction clamp(value, min, max) {\n  return Math.min(max, Math.max(min, value));\n}\nexports.clamp = clamp;\n/**\r\n * Checks if a is approximately equal to b.\r\n */\nfunction approximately(a, b) {\n  return Math.abs(a - b) < exports.epsilon;\n}\nexports.approximately = approximately;","map":{"version":3,"names":["Object","defineProperty","exports","value","approximately","clamp","invlerp","slerp","lerp","epsilon","rad2deg","deg2rad","Math","PI","a","b","t","cos","v","min","max","abs"],"sources":["C:/works/react-test/node_modules/party-js/lib/systems/math.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,KAAK,GAAGH,OAAO,CAACI,OAAO,GAAGJ,OAAO,CAACK,KAAK,GAAGL,OAAO,CAACM,IAAI,GAAGN,OAAO,CAACO,OAAO,GAAGP,OAAO,CAACQ,OAAO,GAAGR,OAAO,CAACS,OAAO,GAAG,KAAK,CAAC;AACrJ;AACA;AACA;AACAT,OAAO,CAACS,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC/B;AACA;AACA;AACAX,OAAO,CAACQ,OAAO,GAAG,GAAG,GAAGE,IAAI,CAACC,EAAE;AAC/B;AACA;AACA;AACAX,OAAO,CAACO,OAAO,GAAG,QAAQ;AAC1B;AACA;AACA;AACA,SAASD,IAAIA,CAACM,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACnB,OAAO,CAAC,CAAC,GAAGA,CAAC,IAAIF,CAAC,GAAGE,CAAC,GAAGD,CAAC;AAC9B;AACAb,OAAO,CAACM,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA,SAASD,KAAKA,CAACO,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACpB,OAAOR,IAAI,CAACM,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,GAAGH,IAAI,CAACK,GAAG,CAACD,CAAC,GAAGJ,IAAI,CAACC,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD;AACAX,OAAO,CAACK,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA,SAASD,OAAOA,CAACQ,CAAC,EAAEC,CAAC,EAAEG,CAAC,EAAE;EACtB,OAAO,CAACA,CAAC,GAAGJ,CAAC,KAAKC,CAAC,GAAGD,CAAC,CAAC;AAC5B;AACAZ,OAAO,CAACI,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA,SAASD,KAAKA,CAACF,KAAK,EAAEgB,GAAG,EAAEC,GAAG,EAAE;EAC5B,OAAOR,IAAI,CAACO,GAAG,CAACC,GAAG,EAAER,IAAI,CAACQ,GAAG,CAACD,GAAG,EAAEhB,KAAK,CAAC,CAAC;AAC9C;AACAD,OAAO,CAACG,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA,SAASD,aAAaA,CAACU,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOH,IAAI,CAACS,GAAG,CAACP,CAAC,GAAGC,CAAC,CAAC,GAAGb,OAAO,CAACO,OAAO;AAC5C;AACAP,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}