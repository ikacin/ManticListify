{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\react-test\\\\src\\\\pages\\\\NamesCountries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Image, Text, Badge, Button, Group, Space } from '@mantine/core';\nimport { Center } from '@mantine/core';\nimport Headers from \"./Header\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NamesCountries = () => {\n  _s();\n  const [listData, setListData] = useState([]);\n  const {\n    name\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const url = `https://restcountries.com/v3.1/name/${name}`;\n    axios.get(url).then(function (response) {\n      setListData(response.data);\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  const getPage = common => {\n    navigate(`/layout/restCountries/name/${common}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Headers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      h: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), listData && listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(Center, {\n        maw: 400,\n        h: 500,\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          shadow: \"sm\",\n          padding: \"lg\",\n          radius: \"md\",\n          withBorder: true,\n          children: [/*#__PURE__*/_jsxDEV(Card.Section, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: item.flags.svg,\n              height: 160,\n              alt: \"Norway\",\n              onClick: () => getPage(item.name.common)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            position: \"apart\",\n            mt: \"md\",\n            mb: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              weight: 500,\n              children: item.altSpellings[2] ? item.altSpellings[2] : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              color: \"pink\",\n              variant: \"light\",\n              children: item.continents[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            size: \"sm\",\n            color: \"dimmed\",\n            children: item.flags.alt ? item.flags.alt : \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            h: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            size: \"sm\",\n            color: \"dimmed\",\n            children: [\"Population : \", /*#__PURE__*/_jsxDEV(Badge, {\n              children: item.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            color: \"blue\",\n            fullWidth: true,\n            mt: \"md\",\n            radius: \"md\",\n            children: /*#__PURE__*/_jsxDEV(LinkMaps, {\n              href: item.maps.openStreetMaps,\n              children: \"Go to Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(NamesCountries, \"raTCvpTOZT0F8B9if6MWVPdtcH0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NamesCountries;\nexport default NamesCountries;\nconst LinkMaps = styled.a`\n  text-decoration: none;\n\n`;\n_c2 = LinkMaps;\nvar _c, _c2;\n$RefreshReg$(_c, \"NamesCountries\");\n$RefreshReg$(_c2, \"LinkMaps\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","Card","Image","Text","Badge","Button","Group","Space","Center","Headers","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","NamesCountries","_s","listData","setListData","name","navigate","url","get","then","response","data","console","log","catch","error","getPage","common","children","fileName","_jsxFileName","lineNumber","columnNumber","h","map","item","maw","mx","shadow","padding","radius","withBorder","Section","src","flags","svg","height","alt","onClick","position","mt","mb","weight","altSpellings","color","variant","continents","size","population","toString","replace","fullWidth","LinkMaps","href","maps","openStreetMaps","_c","a","_c2","$RefreshReg$"],"sources":["C:/works/react-test/src/pages/NamesCountries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Card, Image, Text, Badge, Button, Group,Space } from '@mantine/core';\r\nimport { Center } from '@mantine/core';\r\nimport Headers from \"./Header\";\r\nimport styled from 'styled-components'\r\n\r\nconst NamesCountries = () => {\r\n    const [listData, setListData] = useState([]);\r\n    const {name} = useParams();\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const url =`https://restcountries.com/v3.1/name/${name}`;\r\n        axios.get(url)\r\n            .then(function (response) {\r\n                setListData(response.data)\r\n                console.log(response.data)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const getPage = (common) => {\r\n        navigate(`/layout/restCountries/name/${common}`)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n            <>\r\n                <Headers/>\r\n                <Space h=\"xl\" />\r\n\r\n                {\r\n                    listData && listData.map(item => {\r\n                        return (\r\n                            <Center maw={400} h={500} mx=\"auto\">\r\n                                <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\r\n                                    <Card.Section>\r\n                                        <Image\r\n                                            src={item.flags.svg}\r\n                                            height={160}\r\n                                            alt=\"Norway\"\r\n                                            onClick={() => getPage(item.name.common)}\r\n                                        />\r\n                                    </Card.Section>\r\n\r\n                                    <Group position=\"apart\" mt=\"md\" mb=\"xs\">\r\n                                        <Text weight={500}>{item.altSpellings[2] ? item.altSpellings[2] : \"-\" }</Text>\r\n                                        <Badge color=\"pink\" variant=\"light\">\r\n                                            {item.continents[0]}\r\n                                        </Badge>\r\n                                    </Group>\r\n\r\n                                    <Text size=\"sm\" color=\"dimmed\">\r\n                                        {item.flags.alt ? item.flags.alt : \"-\"}\r\n                                    </Text>\r\n\r\n\r\n                                    <Space h=\"md\" />\r\n\r\n                                    <Text size=\"sm\" color=\"dimmed\">\r\n                                        Population : <Badge>{item.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}</Badge>\r\n                                    </Text>\r\n\r\n                                    <Button variant=\"light\" color=\"blue\" fullWidth mt=\"md\" radius=\"md\">\r\n                                        <LinkMaps href={item.maps.openStreetMaps}>Go to Maps</LinkMaps>\r\n                                    </Button>\r\n                                </Card>\r\n                            </Center>\r\n\r\n                        );\r\n\r\n                    })\r\n\r\n\r\n                }\r\n\r\n            </>\r\n    );\r\n};\r\n\r\nexport default NamesCountries;\r\n\r\n\r\nconst LinkMaps = styled.a`\r\n  text-decoration: none;\r\n\r\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}