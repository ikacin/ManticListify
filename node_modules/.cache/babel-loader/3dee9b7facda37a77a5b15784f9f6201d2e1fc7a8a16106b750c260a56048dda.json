{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\nvar components_1 = require(\"../components\");\nvar random_1 = require(\"./random\");\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\nfunction dynamicSource(source) {\n  if (source instanceof HTMLElement) {\n    return elementSource(source);\n  }\n  if (source instanceof components_1.Circle) {\n    return circleSource(source);\n  }\n  if (source instanceof components_1.Rect) {\n    return rectSource(source);\n  }\n  if (source instanceof MouseEvent) {\n    return mouseSource(source);\n  }\n  throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\n}\nexports.dynamicSource = dynamicSource;\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\nfunction elementSource(source) {\n  return function () {\n    return random_1.randomInsideRect(components_1.Rect.fromElement(source));\n  };\n}\nexports.elementSource = elementSource;\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\nfunction mouseSource(source) {\n  return function () {\n    return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\n  };\n}\nexports.mouseSource = mouseSource;\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\nfunction rectSource(source) {\n  return function () {\n    return random_1.randomInsideRect(source);\n  };\n}\nexports.rectSource = rectSource;\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\nfunction circleSource(source) {\n  return function () {\n    return random_1.randomInsideCircle(source);\n  };\n}\nexports.circleSource = circleSource;","map":{"version":3,"names":["Object","defineProperty","exports","value","circleSource","rectSource","mouseSource","elementSource","dynamicSource","components_1","require","random_1","source","HTMLElement","Circle","Rect","MouseEvent","Error","randomInsideRect","fromElement","Vector","window","scrollX","clientX","scrollY","clientY","randomInsideCircle"],"sources":["C:/works/react-test/node_modules/party-js/lib/systems/sources.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,UAAU,GAAGH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACK,aAAa,GAAGL,OAAO,CAACM,aAAa,GAAG,KAAK,CAAC;AACxH,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC;AACA;AACA;AACA,SAASF,aAAaA,CAACI,MAAM,EAAE;EAC3B,IAAIA,MAAM,YAAYC,WAAW,EAAE;IAC/B,OAAON,aAAa,CAACK,MAAM,CAAC;EAChC;EACA,IAAIA,MAAM,YAAYH,YAAY,CAACK,MAAM,EAAE;IACvC,OAAOV,YAAY,CAACQ,MAAM,CAAC;EAC/B;EACA,IAAIA,MAAM,YAAYH,YAAY,CAACM,IAAI,EAAE;IACrC,OAAOV,UAAU,CAACO,MAAM,CAAC;EAC7B;EACA,IAAIA,MAAM,YAAYI,UAAU,EAAE;IAC9B,OAAOV,WAAW,CAACM,MAAM,CAAC;EAC9B;EACA,MAAM,IAAIK,KAAK,CAAC,mCAAmC,GAAGL,MAAM,GAAG,IAAI,CAAC;AACxE;AACAV,OAAO,CAACM,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA,SAASD,aAAaA,CAACK,MAAM,EAAE;EAC3B,OAAO,YAAY;IAAE,OAAOD,QAAQ,CAACO,gBAAgB,CAACT,YAAY,CAACM,IAAI,CAACI,WAAW,CAACP,MAAM,CAAC,CAAC;EAAE,CAAC;AACnG;AACAV,OAAO,CAACK,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA,SAASD,WAAWA,CAACM,MAAM,EAAE;EACzB,OAAO,YAAY;IACf,OAAO,IAAIH,YAAY,CAACW,MAAM,CAACC,MAAM,CAACC,OAAO,GAAGV,MAAM,CAACW,OAAO,EAAEF,MAAM,CAACG,OAAO,GAAGZ,MAAM,CAACa,OAAO,CAAC;EACpG,CAAC;AACL;AACAvB,OAAO,CAACI,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA,SAASD,UAAUA,CAACO,MAAM,EAAE;EACxB,OAAO,YAAY;IAAE,OAAOD,QAAQ,CAACO,gBAAgB,CAACN,MAAM,CAAC;EAAE,CAAC;AACpE;AACAV,OAAO,CAACG,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA,SAASD,YAAYA,CAACQ,MAAM,EAAE;EAC1B,OAAO,YAAY;IAAE,OAAOD,QAAQ,CAACe,kBAAkB,CAACd,MAAM,CAAC;EAAE,CAAC;AACtE;AACAV,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}