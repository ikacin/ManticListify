{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Color = void 0;\nvar math_1 = require(\"../systems/math\");\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\nvar Color = /** @class */function () {\n  /**\r\n   * Creates a new color instance from the specified RGB components.\r\n   */\n  function Color(r, g, b) {\n    this.values = new Float32Array(3);\n    this.rgb = [r, g, b];\n  }\n  Object.defineProperty(Color.prototype, \"r\", {\n    /**\r\n     * Returns the r-component of the color.\r\n     */\n    get: function () {\n      return this.values[0];\n    },\n    /**\r\n     * Modifies the r-component of the color.\r\n     * Note that this also floors the value.\r\n     */\n    set: function (value) {\n      this.values[0] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"g\", {\n    /**\r\n     * Returns the g-component of the color.\r\n     */\n    get: function () {\n      return this.values[1];\n    },\n    /**\r\n     * Modifies the g-component of the color.\r\n     * Note that this also floors the value.\r\n     */\n    set: function (value) {\n      this.values[1] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"b\", {\n    /**\r\n     * Returns the b-component of the color.\r\n     * Note that this also floors the value.\r\n     */\n    get: function () {\n      return this.values[2];\n    },\n    /**\r\n     * Modifies the b-component of the color.\r\n     */\n    set: function (value) {\n      this.values[2] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"rgb\", {\n    /**\r\n     * Returns the rgb-components of the color, bundled as a copied array.\r\n     */\n    get: function () {\n      return [this.r, this.g, this.b];\n    },\n    /**\r\n     * Simultaneously updates the rgb-components of the color, by passing an array.\r\n     */\n    set: function (values) {\n      this.r = values[0];\n      this.g = values[1];\n      this.b = values[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Mixes the two color together with an optional mixing weight.\r\n   * This weight is 0.5 by default, perfectly averaging the color.\r\n   */\n  Color.prototype.mix = function (color, weight) {\n    if (weight === void 0) {\n      weight = 0.5;\n    }\n    return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\n  };\n  /**\r\n   * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n   */\n  Color.prototype.toHex = function () {\n    var hex = function (v) {\n      return v.toString(16).padStart(2, \"0\");\n    };\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  };\n  /**\r\n   * Returns a formatted representation of the color.\r\n   */\n  Color.prototype.toString = function () {\n    return \"rgb(\" + this.values.join(\", \") + \")\";\n  };\n  /**\r\n   * Creates a color from the specified hexadecimal string.\r\n   * This string can optionally be prefixed by '#'.\r\n   */\n  Color.fromHex = function (hex) {\n    if (hex.startsWith(\"#\")) {\n      hex = hex.substr(1);\n    }\n    return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\n  };\n  /**\r\n   * Creates a color from the specified HSL components.\r\n   *\r\n   * @see https://stackoverflow.com/a/9493060/5507624\r\n   */\n  Color.fromHsl = function (h, s, l) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n    if (s === 0) {\n      return new Color(l, l, l);\n    } else {\n      var hue2rgb = function (p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n      };\n      var to255 = function (v) {\n        return Math.min(255, 256 * v);\n      };\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\n    }\n  };\n  /**\r\n   * Returns (1, 1, 1).\r\n   */\n  Color.white = new Color(255, 255, 255);\n  /**\r\n   * Returns (0, 0, 0).\r\n   */\n  Color.black = new Color(0, 0, 0);\n  return Color;\n}();\nexports.Color = Color;","map":{"version":3,"names":["Object","defineProperty","exports","value","Color","math_1","require","r","g","b","values","Float32Array","rgb","prototype","get","set","Math","floor","enumerable","configurable","mix","color","weight","lerp","toHex","hex","v","toString","padStart","join","fromHex","startsWith","substr","parseInt","fromHsl","h","s","l","hue2rgb","p","q","t","to255","min","white","black"],"sources":["C:/works/react-test/node_modules/party-js/lib/components/color.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}