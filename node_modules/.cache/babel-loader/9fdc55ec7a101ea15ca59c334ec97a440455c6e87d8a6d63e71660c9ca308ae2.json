{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector = void 0;\nvar math_1 = require(\"../systems/math\");\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\nvar Vector = /** @class */function () {\n  /**\r\n   * Creates a new vector with optional x-, y-, and z-components.\r\n   * Omitted components are defaulted to 0.\r\n   */\n  function Vector(x, y, z) {\n    if (x === void 0) {\n      x = 0;\n    }\n    if (y === void 0) {\n      y = 0;\n    }\n    if (z === void 0) {\n      z = 0;\n    }\n    this.values = new Float32Array(3);\n    this.xyz = [x, y, z];\n  }\n  Object.defineProperty(Vector.prototype, \"x\", {\n    /**\r\n     * Returns the x-component of the vector.\r\n     */\n    get: function () {\n      return this.values[0];\n    },\n    /**\r\n     * Modifies the x-component of the vector.\r\n     */\n    set: function (value) {\n      this.values[0] = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Vector.prototype, \"y\", {\n    /**\r\n     * Returns the y-component of the vector.\r\n     */\n    get: function () {\n      return this.values[1];\n    },\n    /**\r\n     * Modifies the y-component of the vector.\r\n     */\n    set: function (value) {\n      this.values[1] = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Vector.prototype, \"z\", {\n    /**\r\n     * Returns the z-component of the vector.\r\n     */\n    get: function () {\n      return this.values[2];\n    },\n    /**\r\n     * Modifies the z-component of the vector.\r\n     */\n    set: function (value) {\n      this.values[2] = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Vector.prototype, \"xyz\", {\n    /**\r\n     * Returns the xyz-components of the vector, bundled as a copied array.\r\n     */\n    get: function () {\n      return [this.x, this.y, this.z];\n    },\n    /**\r\n     * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n     */\n    set: function (values) {\n      this.values[0] = values[0];\n      this.values[1] = values[1];\n      this.values[2] = values[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the length of the vector.\r\n   */\n  Vector.prototype.magnitude = function () {\n    return Math.sqrt(this.sqrMagnitude());\n  };\n  /**\r\n   * Returns the squared length of the vector.\r\n   */\n  Vector.prototype.sqrMagnitude = function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  };\n  /**\r\n   * Adds the two vectors together, component-wise.\r\n   */\n  Vector.prototype.add = function (vector) {\n    return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\n  };\n  /**\r\n   * Subtracts the right vector from the left one, component-wise.\r\n   */\n  Vector.prototype.subtract = function (vector) {\n    return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\n  };\n  /**\r\n   * Scales the lefthand vector by another vector or by a number.\r\n   */\n  Vector.prototype.scale = function (scalar) {\n    if (typeof scalar === \"number\") {\n      return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\n    } else {\n      return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\n    }\n  };\n  /**\r\n   * Normalizes the vector to a length of 1. If the length was previously zero,\r\n   * then a zero-length vector will be returned.\r\n   */\n  Vector.prototype.normalized = function () {\n    var magnitude = this.magnitude();\n    if (magnitude !== 0) {\n      return this.scale(1 / magnitude);\n    }\n    return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\n  };\n  /**\r\n   * Returns the angle between two vectors, in degrees.\r\n   */\n  Vector.prototype.angle = function (vector) {\n    return math_1.rad2deg * Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) / (this.magnitude() * vector.magnitude()));\n  };\n  /**\r\n   * Returns the cross-product of two vectors.\r\n   */\n  Vector.prototype.cross = function (vector) {\n    return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\n  };\n  /**\r\n   * returns the dot-product of two vectors.\r\n   */\n  Vector.prototype.dot = function (vector) {\n    return this.magnitude() * vector.magnitude() * Math.cos(math_1.deg2rad * this.angle(vector));\n  };\n  /**\r\n   * Returns a formatted representation of the vector.\r\n   */\n  Vector.prototype.toString = function () {\n    return \"Vector(\" + this.values.join(\", \") + \")\";\n  };\n  /**\r\n   * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n   */\n  Vector.from2dAngle = function (angle) {\n    return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\n  };\n  /**\r\n   * Returns (0, 0, 0).\r\n   */\n  Vector.zero = new Vector(0, 0, 0);\n  /**\r\n   * Returns (1, 1, 1).\r\n   */\n  Vector.one = new Vector(1, 1, 1);\n  /**\r\n   * Returns (1, 0, 0).\r\n   */\n  Vector.right = new Vector(1, 0, 0);\n  /**\r\n   * Returns (0, 1, 0).\r\n   */\n  Vector.up = new Vector(0, 1, 0);\n  /**\r\n   * Returns (0, 0, 1).\r\n   */\n  Vector.forward = new Vector(0, 0, 1);\n  return Vector;\n}();\nexports.Vector = Vector;","map":{"version":3,"names":["__spreadArray","to","from","i","il","length","j","Object","defineProperty","exports","value","Vector","math_1","require","x","y","z","values","Float32Array","xyz","prototype","get","set","enumerable","configurable","magnitude","Math","sqrt","sqrMagnitude","add","vector","subtract","scale","scalar","normalized","bind","apply","angle","rad2deg","acos","cross","dot","cos","deg2rad","toString","join","from2dAngle","sin","zero","one","right","up","forward"],"sources":["C:/works/react-test/node_modules/party-js/lib/components/vector.js"],"sourcesContent":["\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAE;EACpE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,IAAI,CAACG,MAAM,EAAEC,CAAC,GAAGL,EAAE,CAACI,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEG,CAAC,EAAE,EAC7DL,EAAE,CAACK,CAAC,CAAC,GAAGJ,IAAI,CAACC,CAAC,CAAC;EACnB,OAAOF,EAAE;AACb,CAAC;AACDM,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,MAAM,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;EACI,SAASA,MAAMA,CAACG,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACrB,IAAIF,CAAC,KAAK,KAAK,CAAC,EAAE;MAAEA,CAAC,GAAG,CAAC;IAAE;IAC3B,IAAIC,CAAC,KAAK,KAAK,CAAC,EAAE;MAAEA,CAAC,GAAG,CAAC;IAAE;IAC3B,IAAIC,CAAC,KAAK,KAAK,CAAC,EAAE;MAAEA,CAAC,GAAG,CAAC;IAAE;IAC3B,IAAI,CAACC,MAAM,GAAG,IAAIC,YAAY,CAAC,CAAC,CAAC;IACjC,IAAI,CAACC,GAAG,GAAG,CAACL,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EACxB;EACAT,MAAM,CAACC,cAAc,CAACG,MAAM,CAACS,SAAS,EAAE,GAAG,EAAE;IACzC;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;IACzB,CAAC;IACD;AACR;AACA;IACQK,GAAG,EAAE,SAAAA,CAAUZ,KAAK,EAAE;MAClB,IAAI,CAACO,MAAM,CAAC,CAAC,CAAC,GAAGP,KAAK;IAC1B,CAAC;IACDa,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjB,MAAM,CAACC,cAAc,CAACG,MAAM,CAACS,SAAS,EAAE,GAAG,EAAE;IACzC;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;IACzB,CAAC;IACD;AACR;AACA;IACQK,GAAG,EAAE,SAAAA,CAAUZ,KAAK,EAAE;MAClB,IAAI,CAACO,MAAM,CAAC,CAAC,CAAC,GAAGP,KAAK;IAC1B,CAAC;IACDa,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjB,MAAM,CAACC,cAAc,CAACG,MAAM,CAACS,SAAS,EAAE,GAAG,EAAE;IACzC;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC;IACzB,CAAC;IACD;AACR;AACA;IACQK,GAAG,EAAE,SAAAA,CAAUZ,KAAK,EAAE;MAClB,IAAI,CAACO,MAAM,CAAC,CAAC,CAAC,GAAGP,KAAK;IAC1B,CAAC;IACDa,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFjB,MAAM,CAACC,cAAc,CAACG,MAAM,CAACS,SAAS,EAAE,KAAK,EAAE;IAC3C;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,CAAC,IAAI,CAACP,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;IACnC,CAAC;IACD;AACR;AACA;IACQM,GAAG,EAAE,SAAAA,CAAUL,MAAM,EAAE;MACnB,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;MAC1B,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;MAC1B,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IAC9B,CAAC;IACDM,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;EACIb,MAAM,CAACS,SAAS,CAACK,SAAS,GAAG,YAAY;IACrC,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;EACzC,CAAC;EACD;AACJ;AACA;EACIjB,MAAM,CAACS,SAAS,CAACQ,YAAY,GAAG,YAAY;IACxC,OAAO,IAAI,CAACd,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;EAC9D,CAAC;EACD;AACJ;AACA;EACIL,MAAM,CAACS,SAAS,CAACS,GAAG,GAAG,UAAUC,MAAM,EAAE;IACrC,OAAO,IAAInB,MAAM,CAAC,IAAI,CAACG,CAAC,GAAGgB,MAAM,CAAChB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGe,MAAM,CAACf,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGc,MAAM,CAACd,CAAC,CAAC;EAC9E,CAAC;EACD;AACJ;AACA;EACIL,MAAM,CAACS,SAAS,CAACW,QAAQ,GAAG,UAAUD,MAAM,EAAE;IAC1C,OAAO,IAAInB,MAAM,CAAC,IAAI,CAACG,CAAC,GAAGgB,MAAM,CAAChB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGe,MAAM,CAACf,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGc,MAAM,CAACd,CAAC,CAAC;EAC9E,CAAC;EACD;AACJ;AACA;EACIL,MAAM,CAACS,SAAS,CAACY,KAAK,GAAG,UAAUC,MAAM,EAAE;IACvC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC5B,OAAO,IAAItB,MAAM,CAAC,IAAI,CAACG,CAAC,GAAGmB,MAAM,EAAE,IAAI,CAAClB,CAAC,GAAGkB,MAAM,EAAE,IAAI,CAACjB,CAAC,GAAGiB,MAAM,CAAC;IACxE,CAAC,MACI;MACD,OAAO,IAAItB,MAAM,CAAC,IAAI,CAACG,CAAC,GAAGmB,MAAM,CAACnB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGkB,MAAM,CAAClB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGiB,MAAM,CAACjB,CAAC,CAAC;IAC9E;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIL,MAAM,CAACS,SAAS,CAACc,UAAU,GAAG,YAAY;IACtC,IAAIT,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC;IAChC,IAAIA,SAAS,KAAK,CAAC,EAAE;MACjB,OAAO,IAAI,CAACO,KAAK,CAAC,CAAC,GAAGP,SAAS,CAAC;IACpC;IACA,OAAO,KAAKd,MAAM,CAACwB,IAAI,CAACC,KAAK,CAACzB,MAAM,EAAEX,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAE,CAAC;EAC/E,CAAC;EACD;AACJ;AACA;EACIR,MAAM,CAACS,SAAS,CAACiB,KAAK,GAAG,UAAUP,MAAM,EAAE;IACvC,OAAQlB,MAAM,CAAC0B,OAAO,GAClBZ,IAAI,CAACa,IAAI,CAAC,CAAC,IAAI,CAACzB,CAAC,GAAGgB,MAAM,CAAChB,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGe,MAAM,CAACf,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGc,MAAM,CAACd,CAAC,KAC/D,IAAI,CAACS,SAAS,CAAC,CAAC,GAAGK,MAAM,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;EACD;AACJ;AACA;EACId,MAAM,CAACS,SAAS,CAACoB,KAAK,GAAG,UAAUV,MAAM,EAAE;IACvC,OAAO,IAAInB,MAAM,CAAC,IAAI,CAACI,CAAC,GAAGe,MAAM,CAACd,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGc,MAAM,CAACf,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGc,MAAM,CAAChB,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGgB,MAAM,CAACd,CAAC,EAAE,IAAI,CAACF,CAAC,GAAGgB,MAAM,CAACf,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGe,MAAM,CAAChB,CAAC,CAAC;EAC1I,CAAC;EACD;AACJ;AACA;EACIH,MAAM,CAACS,SAAS,CAACqB,GAAG,GAAG,UAAUX,MAAM,EAAE;IACrC,OAAQ,IAAI,CAACL,SAAS,CAAC,CAAC,GACpBK,MAAM,CAACL,SAAS,CAAC,CAAC,GAClBC,IAAI,CAACgB,GAAG,CAAC9B,MAAM,CAAC+B,OAAO,GAAG,IAAI,CAACN,KAAK,CAACP,MAAM,CAAC,CAAC;EACrD,CAAC;EACD;AACJ;AACA;EACInB,MAAM,CAACS,SAAS,CAACwB,QAAQ,GAAG,YAAY;IACpC,OAAO,SAAS,GAAG,IAAI,CAAC3B,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;EACnD,CAAC;EACD;AACJ;AACA;EACIlC,MAAM,CAACmC,WAAW,GAAG,UAAUT,KAAK,EAAE;IAClC,OAAO,IAAI1B,MAAM,CAACe,IAAI,CAACgB,GAAG,CAACL,KAAK,GAAGzB,MAAM,CAAC+B,OAAO,CAAC,EAAEjB,IAAI,CAACqB,GAAG,CAACV,KAAK,GAAGzB,MAAM,CAAC+B,OAAO,CAAC,CAAC;EACzF,CAAC;EACD;AACJ;AACA;EACIhC,MAAM,CAACqC,IAAI,GAAG,IAAIrC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC;AACJ;AACA;EACIA,MAAM,CAACsC,GAAG,GAAG,IAAItC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC;AACJ;AACA;EACIA,MAAM,CAACuC,KAAK,GAAG,IAAIvC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClC;AACJ;AACA;EACIA,MAAM,CAACwC,EAAE,GAAG,IAAIxC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B;AACJ;AACA;EACIA,MAAM,CAACyC,OAAO,GAAG,IAAIzC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,OAAOA,MAAM;AACjB,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}