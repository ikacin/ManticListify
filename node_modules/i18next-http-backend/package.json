{
  "_from": "i18next-http-backend",
  "_id": "i18next-http-backend@2.2.1",
  "_inBundle": false,
  "_integrity": "sha512-ZXIdn/8NJIBJ0X4hzXfc3STYxKrCKh1fYjji9HPyIpEJfvTvy8/ZlTl8RuTizzCPj2ZcWrfaecyOMKs6bQ7u5A==",
  "_location": "/i18next-http-backend",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "i18next-http-backend",
    "name": "i18next-http-backend",
    "escapedName": "i18next-http-backend",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/i18next-http-backend/-/i18next-http-backend-2.2.1.tgz",
  "_shasum": "cdb7efbafa46ce8f237d9db443f62514664a3bdf",
  "_spec": "i18next-http-backend",
  "_where": "C:\\works\\react-test",
  "bugs": {
    "url": "https://github.com/i18next/i18next-http-backend/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "cross-fetch": "3.1.6"
  },
  "deprecated": false,
  "description": "i18next-http-backend is a backend layer for i18next using in Node.js, in the browser and for Deno.",
  "devDependencies": {
    "@babel/cli": "7.21.5",
    "@babel/core": "7.21.8",
    "@babel/preset-env": "7.21.5",
    "babel-plugin-add-module-exports": "1.0.4",
    "browserify": "17.0.0",
    "dtslint": "4.2.1",
    "eslint": "8.40.0",
    "eslint-config-standard": "17.0.0",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-n": "15.6.1",
    "eslint-plugin-promise": "6.1.1",
    "eslint-plugin-require-path-exists": "1.1.9",
    "eslint-plugin-standard": "5.0.0",
    "expect.js": "0.3.1",
    "i18next": "22.4.15",
    "json-server": "0.17.3",
    "json5": "2.2.3",
    "mocha": "10.2.0",
    "tsd": "0.28.1",
    "tslint": "5.20.1",
    "typescript": "5.0.4",
    "uglify-js": "3.17.4",
    "xmlhttprequest": "1.8.0"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "types": {
        "require": "./cjs/index.d.ts",
        "import": "./esm/index.d.ts"
      },
      "module": "./esm/index.js",
      "import": "./esm/index.js",
      "require": "./cjs/index.js",
      "default": "./esm/index.js"
    },
    "./cjs": {
      "types": "./cjs/index.d.ts",
      "default": "./cjs/index.js"
    },
    "./esm": {
      "types": "./esm/index.d.ts",
      "default": "./esm/index.js"
    }
  },
  "homepage": "https://github.com/i18next/i18next-http-backend",
  "keywords": [
    "i18next",
    "i18next-backend",
    "i18next-http-backend"
  ],
  "license": "MIT",
  "main": "./cjs/index.js",
  "module": "./esm/index.js",
  "name": "i18next-http-backend",
  "private": false,
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/i18next/i18next-http-backend.git"
  },
  "scripts": {
    "browser": "browserify --ignore cross-fetch --standalone i18nextHttpBackend cjs/index.js -o i18nextHttpBackend.js && uglifyjs i18nextHttpBackend.js --compress --mangle -o i18nextHttpBackend.min.js",
    "build": "npm run compile && npm run browser",
    "compile": "npm run compile:esm && npm run compile:cjs",
    "compile:cjs": "rm -rf cjs && mkdir cjs && BABEL_ENV=cjs babel lib -d cjs && cp index.d.ts cjs/index.d.ts && echo '{\"type\":\"commonjs\"}' > cjs/package.json && cp lib/getFetch.cjs cjs/getFetch.js && node -e \"fs.writeFileSync('cjs/getFetch.js', fs.readFileSync('cjs/getFetch.js').toString().replace('/* eslint-disable no-var, no-undef */\\n', ''))\" && node -e \"fs.writeFileSync('cjs/request.js', fs.readFileSync('cjs/request.js').toString().replace('getFetch.cjs', 'getFetch.js'))\"",
    "compile:esm": "rm -rf esm && mkdir esm && BABEL_ENV=esm babel lib -d esm && cp index.d.ts esm/index.d.ts && cp lib/getFetch.cjs esm/getFetch.cjs && rm -f esm/getFetch.js && node -e \"fs.writeFileSync('esm/getFetch.cjs', fs.readFileSync('esm/getFetch.cjs').toString().replace('/* eslint-disable no-var, no-undef */\\n', ''))\"",
    "lint": "eslint .",
    "postversion": "git push && git push --tags",
    "preversion": "npm run test && npm run build && git push",
    "test": "npm run lint && npm run build && npm run test:fetch && npm run test:xmlhttpreq && npm run test:typescript",
    "test:deno": "deno test --allow-net test/deno/*.js",
    "test:fetch": "mocha test -R spec --exit --experimental-modules",
    "test:typescript": "tslint --project tsconfig.json && tsd",
    "test:xmlhttpreq": "mocha test -R spec --require test/fixtures/xmlHttpRequest.cjs --exit --experimental-modules"
  },
  "tsd": {
    "directory": "test/typescript"
  },
  "type": "module",
  "types": "./index.d.ts",
  "version": "2.2.1"
}
